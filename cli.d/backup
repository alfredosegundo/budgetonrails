#!/usr/bin/env bash

SUBCOMMAND_DESC="Helper for some git operations"
SUBCOMMAND_HELP=$(cat <<EOH
db         backup production database.
download   download most recent backup.
load       load into locahost [database] the most recent backup.
list       list all backups.

EOH
)

BACKUP_FOLDER="0ByYbR_Ai19aeMWhhOVJmVUg3NEU"

function column() {
    col=$1
    shift
    awk -v col="$col" '{print $col}' "${@--}"
}

function isodate() {
    date +"%Y-%m-%dT%H.%M.%SZ"
}

function query_backup_folder() {
    gdrive list --query " '${BACKUP_FOLDER}' in parents " "$@"
}

function last_backup_id() {
    query_backup_folder --order 'createdTime desc' --no-header --max 1 | column 1
}
case ${1} in
    db)
        filename="$(isodate).dump"
        compressed_name="${filename}.tar.gz"
        in_cyan "Reading backup from web"
        curl -o ${filename} `heroku pg:backups public-url`
        in_cyan "Compressing into ${compressed_name}"
        tar -cvzf ${compressed_name} ${filename}
        in_cyan "Removing ${filename}"
        rm ${filename}
        in_cyan "Uploading to google drive"
        gdrive upload --delete --parent ${BACKUP_FOLDER} ${compressed_name}
    ;;
    download)
        gdrive download "$(last_backup_id)"
    ;;
    load)
        if [ -z $2 ]; then
            in_red "You need to provide an database name."
            exit 1;
        fi
        gdrive download --stdout "$(last_backup_id)" | tar xzf - -O | pg_restore --clean --no-acl --no-owner -h localhost -d $2
    ;;
    list|l)
        query_backup_folder
    ;;
esac